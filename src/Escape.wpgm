import wollok.game.*
import personaje.*
import cofre.*
import tablero.*
import puerta.*
import cofre.*
import frascos.*
import enemigos.*
import armas.*

program Game {
	
//	CONFIG	
	game.title("Juego")
	game.height(15)
	game.width(30)
	game.ground("suelo.png")
	
// Personaje	
	game.addVisual(personaje)
	game.errorReporter(personaje)
	
// Muros
	muro.cargar() 
	tesoro.cargar()
// Puerta
	game.addVisualIn(puerta,game.at(28,13)) // EJEMPLO

// Eemigos
	game.addVisualIn(new Enemigo(), game.at(3,3) ) // EJEMPLO

// Pociones

// USADOS DE EJEMPLO PARA TESTEAR
	const posion1= new Frasco(efecto = 500)
	const espada1= new Espada1(tipo = "espada", mejoraAtk = 100,image = "espada1.png" )
	const espada2= new Espada2(tipo = "espada", mejoraAtk = 300, image = "espada2.png")
	game.addVisualIn(posion1,game.at(17,8))
	game.addVisualIn(espada1,game.at(20,11))
	game.addVisualIn(espada2,game.at(12,9))
	
	
	
// Colisiones 
	game.whenCollideDo(personaje,{objeto => objeto.esLlevadoPor(personaje)}) // colision aplicada a las posiones y llaves para que sea automatico. 
	
	
//Movimientos e interacciones
	
	// VERSION CON METODOS DIRECCION
		keyboard.up().onPressDo{ personaje.irArriba() }
		keyboard.down().onPressDo{ personaje.irAbajo() }
		keyboard.left().onPressDo{ personaje.irIzquierda() }
		keyboard.right().onPressDo{ personaje.irDerecha() }
		
		keyboard.b().onPressDo{ personaje.retroceder() } // ASIGNACION DE BOTON PARA MOTIVO DE TESTEO
		
	//keyboard.space().onPressDo{personaje.interactuar()}// TERMINAR DE IMPLEMENTAR
	
	//keyboard.x().onPressDo { unObjeto.avanzarFrame() } //super hack con lo de los ticks. TESTEAR
	keyboard.e().onPressDo{ personaje.llevarArma() }
	
	
// Inicio
	game.start()
	
	
}