import wollok.game.*
import otros_obj.*
import tablero.*
import interfaz.* //vacio por ahora
import direcciones.*

import puerta.*
import personaje.*

import cofre.*

import frasco.*
import enemigo.*
import arma.*
import llave.*

program Game {
	
//	CONFIG	
	game.title("Juego")
	game.height(12)
	game.width(12)
	game.ground("concreto.png")
	
// Personaje	
	game.addVisual(personaje)
	
// Muros
	muro.cargar() 
// Puerta
	game.addVisualIn(puerta,game.at(10,10)) //posicion siempre menor o igual a (height - 2) (width - 2) 

// Eemigos
	

// Pociones

// "Mock Objects" - USADOS DE EJEMPLO PARA TESTEAR
	const cofre1 = new Cofre()
	const cofre2 = new Cofre()
	
	const enemigo1 = new Enemigo()
	const llave1  = new Llave()
	
	const pocion= new Pocion(efecto = 500)
	const veneno= new Veneno(efecto = -900)
	
	const palo= new Arma(mejoraAtk = 100,image = "palo.png" )
	const espada= new Arma(mejoraAtk = 300, image = "iron_sword.png")
	
	
	game.addVisualIn(pocion,game.at(3,3))
	game.addVisualIn(veneno,game.at(8,3)) 
	
	game.addVisualIn(palo,game.at(5,6))
	game.addVisualIn(espada,game.at(5,2))
	
	game.addVisualIn(llave1,game.at(7,2)) 
	game.addVisualIn(cofre1,game.at(6,6))
	game.addVisualIn(cofre2,game.at(7,7))
	
	game.addVisualIn(enemigo1, game.at(3,8))
	
// Colisiones 
	
	game.whenCollideDo(personaje,{objeto => objeto.llevadoPor(personaje)}) // METODO MAS GENERAL Y SIN ERRORES PARA LLAVES Y FRASCOS(GT)
																			
	
//Movimientos e interacciones 
	
		keyboard.up().onPressDo { personaje.mover(personaje.position().up(1),arriba) }
		keyboard.down().onPressDo { personaje.mover(personaje.position().down(1),abajo) }
		keyboard.left().onPressDo { personaje.mover(personaje.position().left(1),izquierda) }
		keyboard.right().onPressDo { personaje.mover(personaje.position().right(1),derecha) }
		keyboard.e().onPressDo{personaje.ataque()}
		keyboard.space().onPressDo{personaje.interactuar()} 
		//Interactuar significa:
		// - Abrir cofre segun la orientacion del personaje (abrir a la izquierda, a la derecha, etc)
		// - Atacar un enemigo segun orientacion
		// - Abrir puerta segun orientacion
		// LAS ARMAS NO SON COLISIONABLES Y SE INTERACTUA CON ELLAS (GT)
		
		//keyboard.x().onPressDo { unObjeto.avanzarFrame() } //super hack con lo de los ticks. TESTEAR
		keyboard.a().onPressDo { game.say(personaje,personaje.ataque().toString()) } //Para testings
		keyboard.v().onPressDo { game.say(personaje,personaje.vida().toString()) } //Para testings
		keyboard.l().onPressDo { game.say(personaje,personaje.llavesObtenidas().toString()) } //Para testings
		
// Inicio
	game.start()
	
	
}